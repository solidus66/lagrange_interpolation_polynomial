def lagrange(x, f, xi):
    """
    Функция для нахождения интерполяционного полинома Лагранжа для функции y=f(x)
    по заданным значениям x, f(x).
    :param x: список значений аргумента x.
    :param f: список значений функции f(x).
    :param xi: значение аргумента, для которого нужно найти значение интерполяционного полинома.
    :return: значение интерполяционного полинома Лагранжа в точке xi.
    """
    n = len(x)
    result = 0.0
    for i in range(n):
        # вычисление многочлена Лагранжа
        li = 1.0
        for j in range(n):
            if i != j:
                li *= (xi - x[j]) / (x[i] - x[j])
        result += f[i] * li
    return result


if __name__ == '__main__':                                                          # пример:
    x = list(map(float, input("Введите значения x через пробел: ").split()))        # x = [0, 4, 3]
    f = list(map(float, input("Введите значения f(x) через пробел: ").split()))     # f = [1, -1, -5]
    xi = float(input("Введите значение аргумента xi: "))                            # xi = 1

# вычисление интерполяционного полинома Лагранжа в точке xi
result = lagrange(x, f, xi)  # для написанного выше примера результат -4.0
print(round(result, 10))
